  import React, { useState, useEffect } from "react";
  import Link from "next/link";
  import { useRouter } from "next/router";
  import { useQuery } from '@apollo/client';
  import { GET_PARTSINDEX_CATEGORIES, GET_NAVIGATION_CATEGORIES } from '@/lib/graphql';
  import { PartsIndexCatalogsData, PartsIndexCatalogsVariables, PartsIndexCatalog } from '@/types/partsindex';
  import { NavigationCategory } from '@/types';

  function useIsMobile(breakpoint = 767) {
    const [isMobile, setIsMobile] = React.useState(false);
    React.useEffect(() => {
      const check = () => setIsMobile(window.innerWidth <= breakpoint);
      check();
      window.addEventListener("resize", check);
      return () => window.removeEventListener("resize", check);
    }, [breakpoint]);
    return isMobile;
  }



  // Fallback —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const fallbackTabData = [
    {
      label: "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏",
      heading: "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏",
      links: [
        "–ú–æ—Ç–æ—Ä–Ω—ã–µ –º–∞—Å–ª–∞",
        "–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏–æ–Ω–Ω—ã–µ –º–∞—Å–ª–∞",
        "–¢–æ—Ä–º–æ–∑–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–°–º–∞–∑–∫–∏",
        "–î–∏—Å—Ç–∏–ª–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–æ–¥–∞",
        "–ñ–∏–¥–∫–æ—Å—Ç–∏ –¥–ª—è —Å—Ç–µ–∫–ª–æ–æ–º—ã–≤–∞—Ç–µ–ª–µ–π",
        "–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–ê–Ω—Ç–∏—Ñ—Ä–∏–∑ –∏ –æ—Ö–ª–∞–∂–¥–∞—é—â–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–ü—Ä–æ–º—ã–≤–æ—á–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
      ],
    },
    {
      label: "–ú–∞—Å–ª–∞ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
      heading: "–ú–∞—Å–ª–∞ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
      links: [
        "–ú–æ—Ç–æ—Ä–Ω—ã–µ –º–∞—Å–ª–∞",
        "–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏–æ–Ω–Ω—ã–µ –º–∞—Å–ª–∞",
        "–¢–æ—Ä–º–æ–∑–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–°–º–∞–∑–∫–∏",
        "–î–∏—Å—Ç–∏–ª–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–æ–¥–∞",
        "–ñ–∏–¥–∫–æ—Å—Ç–∏ –¥–ª—è —Å—Ç–µ–∫–ª–æ–æ–º—ã–≤–∞—Ç–µ–ª–µ–π",
        "–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–ê–Ω—Ç–∏—Ñ—Ä–∏–∑ –∏ –æ—Ö–ª–∞–∂–¥–∞—é—â–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–ü—Ä–æ–º—ã–≤–æ—á–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
      ],
    },
    {
      label: "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
      heading: "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
      links: [
        "–ú–æ—Ç–æ—Ä–Ω—ã–µ –º–∞—Å–ª–∞",
        "–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏–æ–Ω–Ω—ã–µ –º–∞—Å–ª–∞",
        "–¢–æ—Ä–º–æ–∑–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–°–º–∞–∑–∫–∏",
        "–î–∏—Å—Ç–∏–ª–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–æ–¥–∞",
        "–ñ–∏–¥–∫–æ—Å—Ç–∏ –¥–ª—è —Å—Ç–µ–∫–ª–æ–æ–º—ã–≤–∞—Ç–µ–ª–µ–π",
        "–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–ê–Ω—Ç–∏—Ñ—Ä–∏–∑ –∏ –æ—Ö–ª–∞–∂–¥–∞—é—â–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
        "–ü—Ä–æ–º—ã–≤–æ—á–Ω—ã–µ –∂–∏–¥–∫–æ—Å—Ç–∏",
      ],
    },
  ];

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ PartsIndex –≤ —Ñ–æ—Ä–º–∞—Ç –Ω–∞—à–µ–≥–æ –º–µ–Ω—é
  const transformPartsIndexToTabData = (catalogs: PartsIndexCatalog[]) => {
    console.log('üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞—Ç–∞–ª–æ–≥–∏ PartsIndex:', catalogs.length, '—ç–ª–µ–º–µ–Ω—Ç–æ–≤');
    
    const transformed = catalogs.map(catalog => {
      const groupsCount = catalog.groups?.length || 0;
      console.log(`üìù –ö–∞—Ç–∞–ª–æ–≥: "${catalog.name}" (${groupsCount} –≥—Ä—É–ø–ø)`);
      
      let links: string[] = [];
      
      if (catalog.groups && catalog.groups.length > 0) {
        // –î–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–¥–≥—Ä—É–ø–ø—ã
        catalog.groups.forEach(group => {
          if (group.subgroups && group.subgroups.length > 0) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–≥—Ä—É–ø–ø—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è
            links.push(...group.subgroups.slice(0, 9 - links.length).map(subgroup => subgroup.name));
          } else {
            // –ï—Å–ª–∏ –ø–æ–¥–≥—Ä—É–ø–ø –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∞–º–æ–π –≥—Ä—É–ø–ø—ã
            if (links.length < 9) {
              links.push(group.name);
            }
          }
        });
      }
      
      // –ï—Å–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö
      if (links.length === 0) {
        links = [catalog.name];
      }
      
      console.log(`üîó –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è "${catalog.name}":`, links);
      
      return {
        label: catalog.name,
        heading: catalog.name,
        links: links.slice(0, 9), // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 9 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        catalogId: catalog.id // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
      };
    });
    
    console.log('‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:', transformed.length, '—Ç–∞–±–æ–≤');
    return transformed;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const findCategoryIcon = (catalogId: string, navigationCategories: NavigationCategory[]): string | null => {
    console.log('üîç –ò—â–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è catalogId:', catalogId);
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', navigationCategories);
    
    // –ò—â–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ (–±–µ–∑ –≥—Ä—É–ø–ø—ã)
    const categoryIcon = navigationCategories.find(
      nav => nav.partsIndexCatalogId === catalogId && (!nav.partsIndexGroupId || nav.partsIndexGroupId === '')
    );
    
    console.log('üéØ –ù–∞–π–¥–µ–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:', categoryIcon);
    console.log('üñºÔ∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è –∏–∫–æ–Ω–∫–∞:', categoryIcon?.icon || null);
    
    return categoryIcon?.icon || null;
  };

  const BottomHead = ({ menuOpen, onClose }: { menuOpen: boolean; onClose: () => void }) => {
    const isMobile = useIsMobile();
    const router = useRouter();
    const [mobileCategory, setMobileCategory] = useState<null | any>(null);
    const [tabData, setTabData] = useState(fallbackTabData);
    const [activeTabIndex, setActiveTabIndex] = useState(0);

    console.log('üîÑ BottomHead render:', { 
      menuOpen, 
      tabDataLength: tabData.length, 
      activeTabIndex,
      isMobile 
    });

    // --- Overlay animation state ---
    const [showOverlay, setShowOverlay] = useState(false);
    useEffect(() => {
      if (menuOpen) {
        setShowOverlay(true);
      } else {
        // –ñ–¥—ë–º –æ–∫–æ–Ω—á–∞–Ω–∏—è transition –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∏–∑ DOM
        const timeout = setTimeout(() => setShowOverlay(false), 300);
        return () => clearTimeout(timeout);
      }
    }, [menuOpen]);
    // --- End overlay animation state ---

    // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥–∏ PartsIndex
    const { data: catalogsData, loading, error } = useQuery<PartsIndexCatalogsData, PartsIndexCatalogsVariables>(
      GET_PARTSINDEX_CATEGORIES,
      {
        variables: { 
          lang: 'ru'
        },
        errorPolicy: 'all',
        onCompleted: (data) => {
          console.log('üéâ Apollo Query onCompleted - –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', data);
        },
        onError: (error) => {
          console.error('‚ùå Apollo Query onError:', error);
        }
      }
    );

    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∏–∫–æ–Ω–∫–∞–º–∏
    const { data: navigationData, loading: navigationLoading, error: navigationError } = useQuery<{ navigationCategories: NavigationCategory[] }>(
      GET_NAVIGATION_CATEGORIES,
      {
        errorPolicy: 'all',
        onCompleted: (data) => {
          console.log('üéâ –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã:', data);
        },
        onError: (error) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
        }
      }
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–æ–≤ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç API
    useEffect(() => {
      if (catalogsData?.partsIndexCategoriesWithGroups && catalogsData.partsIndexCategoriesWithGroups.length > 0) {
        console.log('‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é —Å –¥–∞–Ω–Ω—ã–º–∏ PartsIndex:', catalogsData.partsIndexCategoriesWithGroups.length, '–∫–∞—Ç–∞–ª–æ–≥–æ–≤');
        console.log('üîç –ü–µ—Ä–≤—ã–µ 3 –∫–∞—Ç–∞–ª–æ–≥–∞:', catalogsData.partsIndexCategoriesWithGroups.slice(0, 3).map(catalog => ({
          name: catalog.name,
          id: catalog.id,
          groupsCount: catalog.groups?.length || 0,
          groups: catalog.groups?.slice(0, 3).map(group => group.name)
        })));
        
        const apiTabData = transformPartsIndexToTabData(catalogsData.partsIndexCategoriesWithGroups);
        setTabData(apiTabData);
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞–± –Ω–∞ –ø–µ—Ä–≤—ã–π –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        setActiveTabIndex(0);
      } else if (error) {
        console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ PartsIndex:', error);
        setTabData(fallbackTabData);
        setActiveTabIndex(0);
      }
    }, [catalogsData, error]);

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    useEffect(() => {
      if (loading) {
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥–∏ PartsIndex...');
      }
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ PartsIndex:', error);
      }
    }, [loading, error]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥ —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    const handleCategoryClick = (catalogId: string, categoryName: string, entityId?: string) => {
      console.log('üîç –ö–ª–∏–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', { catalogId, categoryName, entityId });
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
      onClose();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ PartsIndex
      router.push({
        pathname: '/catalog',
        query: {
          partsIndexCatalog: catalogId,
          categoryName: encodeURIComponent(categoryName),
          ...(entityId && { partsIndexCategory: entityId })
        }
      });
    };

    // –¢–æ–ª—å–∫–æ –º–æ–±–∏–ª—å–Ω—ã–π UX
    if (isMobile && menuOpen) {
      // –û–≤–µ—Ä–ª–µ–π –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
      return (
        <>
          {showOverlay && (
            <div
              className={`fixed inset-0 bg-black/7 z-40 transition-opacity duration-300 ${menuOpen ? 'opacity-100' : 'opacity-0'}`}
              onClick={onClose}
              aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
            />
          )}
          {/* –≠–∫—Ä–∞–Ω –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
          {mobileCategory ? (
            <div className="mobile-category-overlay z-50">
              <div className="mobile-header">
                <button className="mobile-back-btn" onClick={() => setMobileCategory(null)}>
                  ‚Üê
                </button>
                <span>{mobileCategory.label}</span>
              </div>
              <div className="mobile-subcategories">
                {mobileCategory.links.length === 1 ? (
                  <div 
                    className="mobile-subcategory" 
                    onClick={() => {
                      let subcategoryId = `${mobileCategory.catalogId}_0`;
                      if (mobileCategory.groups) {
                        for (const group of mobileCategory.groups) {
                          if (group.subgroups && group.subgroups.length > 0) {
                            const foundSubgroup = group.subgroups.find((subgroup: any) => subgroup.name === mobileCategory.links[0]);
                            if (foundSubgroup) {
                              subcategoryId = foundSubgroup.id;
                              break;
                            }
                          } else if (group.name === mobileCategory.links[0]) {
                            subcategoryId = group.id;
                            break;
                          }
                        }
                      }
                      const catalogId = mobileCategory.catalogId || 'fallback';
                      handleCategoryClick(catalogId, mobileCategory.links[0], subcategoryId);
                    }}
                    style={{ cursor: "pointer" }}
                  >
                    –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
                  </div>
                ) : (
                  mobileCategory.links.map((link: string, linkIndex: number) => (
                    <div 
                      className="mobile-subcategory" 
                      key={link} 
                      onClick={() => {
                        let subcategoryId = `${mobileCategory.catalogId}_${linkIndex}`;
                        if (mobileCategory.groups) {
                          for (const group of mobileCategory.groups) {
                            if (group.subgroups && group.subgroups.length > 0) {
                              const foundSubgroup = group.subgroups.find((subgroup: any) => subgroup.name === link);
                              if (foundSubgroup) {
                                subcategoryId = foundSubgroup.id;
                                break;
                              }
                            } else if (group.name === link) {
                              subcategoryId = group.id;
                              break;
                            }
                          }
                        }
                        const catalogId = mobileCategory.catalogId || 'fallback';
                        handleCategoryClick(catalogId, link, subcategoryId);
                      }}
                    >
                      {link}
                    </div>
                  ))
                )}
              </div>
            </div>
          ) : (
            // –≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            <div className="mobile-category-overlay z-50">
              <div className="mobile-header">
                <button className="mobile-back-btn" onClick={onClose} aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é">
                  <svg width="24" height="24" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                      <path fillRule="evenodd" clipRule="evenodd" d="M4.11 2.697L2.698 4.11 6.586 8l-3.89 3.89 1.415 1.413L8 9.414l3.89 3.89 1.413-1.415L9.414 8l3.89-3.89-1.415-1.413L8 6.586l-3.89-3.89z" fill="currentColor"></path>
                  </svg>
                </button>
                <span>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</span>
                {loading && <span className="text-sm text-gray-500 ml-2">(–∑–∞–≥—Ä—É–∑–∫–∞...)</span>}
              </div>
              <div className="mobile-subcategories" style={{ maxHeight: "70vh", overflowY: "auto" }}>
                {tabData.map((cat, index) => {
                  // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö PartsIndex –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º fallback ID
                  const catalogId = catalogsData?.partsIndexCategoriesWithGroups?.[index]?.id || `fallback_${index}`;
                  const groups = catalogsData?.partsIndexCategoriesWithGroups?.[index]?.groups || [];
                  return (
                    <div
                      className="mobile-subcategory"
                      key={cat.label}
                      onClick={() => {
                        // –î–æ–±–∞–≤–ª—è–µ–º catalogId –∏ groups –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
                        const categoryWithData = {
                          ...cat,
                          catalogId,
                          groups
                        };
                        setMobileCategory(categoryWithData);
                      }}
                      style={{ cursor: "pointer" }}
                    >
                      {cat.label}
                    </div>
                  );
                })}
              </div>
            </div>
          )}
        </>
      );
    }

    // –î–µ—Å–∫—Ç–æ–ø: –æ—Å—Ç–∞–≤–∏—Ç—å –≤—Å—ë –∫–∞–∫ –µ—Å—Ç—å, –Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–≤–µ—Ä–ª–µ–π
    return (
      <>
        {showOverlay && (
          <div
            className={`fixed inset-0 bg-black/7 z-40 transition-opacity duration-300 ${menuOpen ? 'opacity-100' : 'opacity-0'}`}
            onClick={onClose}
            aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
          />
        )}
        {showOverlay && (
          <div
            className={`fixed inset-0 bg-black/7 z-1900 transition-opacity duration-300 ${menuOpen ? 'opacity-100' : 'opacity-0'}`}
            onClick={onClose}
            aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
          />
        )}
        <nav
          role="navigation"
          className="nav-menu-3 w-nav-menu z-2000"
          style={{ display: menuOpen ? "block" : "none" }}
          onClick={e => e.stopPropagation()} // —á—Ç–æ–±—ã –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—é –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª –µ–≥–æ
        >
          <div className="div-block-28">
            <div className="w-layout-hflex flex-block-90">
              <div className="w-layout-vflex flex-block-88" style={{ maxHeight: "60vh", overflowY: "auto" }}>
                {/* –ú–µ–Ω—é —Å –∏–∫–æ–Ω–∫–∞–º–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ API */}
                {tabData.map((tab, idx) => {
                  // –ü–æ–ª—É—á–∞–µ–º catalogId –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∫–æ–Ω–∫–∏
                  const catalogId = catalogsData?.partsIndexCategoriesWithGroups?.[idx]?.id || `fallback_${idx}`;
                  console.log(`üè∑Ô∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é ${idx}: "${tab.label}" —Å catalogId: "${catalogId}"`);
                  const icon = navigationData?.navigationCategories ? findCategoryIcon(catalogId, navigationData.navigationCategories) : null;
                  console.log(`üé® –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${tab.label}" –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ ${icon ? '–∏–∫–æ–Ω–∫–∞: ' + icon : '–∑–≤–µ–∑–¥–æ—á–∫–∞ (fallback)'}`);
                  
                  return (
                    <a
                      href="#"
                      className={`link-block-7 w-inline-block${activeTabIndex === idx ? " w--current" : ""}`}
                      key={tab.label}
                      onClick={() => {
                        setActiveTabIndex(idx);
                      }}
                      style={{ cursor: "pointer" }}
                    >
                      <div className="div-block-29">
                        <div className="code-embed-12 w-embed">
                          {icon ? (
                            <img 
                              src={icon} 
                              alt={tab.label} 
                              width="21" 
                              height="20" 
                            />
                          ) : (
                            <svg 
                              width="21" 
                              height="20" 
                              viewBox="0 0 21 20" 
                              fill="none" 
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path d="M10.3158 0.643914C10.4674 0.365938 10.8666 0.365938 11.0182 0.643914L14.0029 6.11673C14.0604 6.22222 14.1623 6.29626 14.2804 6.31838L20.4077 7.46581C20.7189 7.52409 20.8423 7.9037 20.6247 8.13378L16.3421 12.6636C16.2595 12.7509 16.2206 12.8707 16.2361 12.9899L17.0382 19.1718C17.079 19.4858 16.7561 19.7204 16.47 19.5847L10.8385 16.9114C10.73 16.8599 10.604 16.8599 10.4955 16.9114L4.86394 19.5847C4.5779 19.7204 4.25499 19.4858 4.29573 19.1718L5.0979 12.9899C5.11336 12.8707 5.07444 12.7509 4.99189 12.6636L0.709252 8.13378C0.491728 7.9037 0.615069 7.52409 0.926288 7.46581L7.05357 6.31838C7.17168 6.29626 7.27358 6.22222 7.33112 6.11673L10.3158 0.643914Z" fill="CurrentColor"></path>
                            </svg>
                          )}
                        </div>
                      </div>
                      <div className="text-block-47">{tab.label}</div>
                    </a>
                  );
                })}
              </div>
              {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å –º–µ–Ω—é —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ */}
              <div className="w-layout-vflex flex-block-89">
                <h3 className="heading-16">{tabData[activeTabIndex]?.heading || tabData[0].heading}{loading && <span className="text-sm text-gray-500 ml-2">(–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...)</span>}</h3>
                <div className="w-layout-hflex flex-block-92">
                  <div className="w-layout-vflex flex-block-91">
                    {(tabData[activeTabIndex]?.links || tabData[0].links).map((link, linkIndex) => {
                      const activeCatalog = catalogsData?.partsIndexCategoriesWithGroups?.[activeTabIndex];
                      
                      // –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–æ–¥–≥—Ä—É–ø–ø—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
                      let subcategoryId = `fallback_${activeTabIndex}_${linkIndex}`;
                      
                      if (activeCatalog?.groups) {
                        for (const group of activeCatalog.groups) {
                          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –ø–æ–¥–≥—Ä—É–ø–ø–∞—Ö
                          if (group.subgroups && group.subgroups.length > 0) {
                            const foundSubgroup = group.subgroups.find((subgroup: any) => subgroup.name === link);
                            if (foundSubgroup) {
                              subcategoryId = foundSubgroup.id;
                              break;
                            }
                          }
                          // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–≥—Ä—É–ø–ø, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–º—É –≥—Ä—É–ø–ø—É
                          else if (group.name === link) {
                            subcategoryId = group.id;
                            break;
                          }
                        }
                      }
                      
                      return (
                        <div
                          className="link-2"
                          key={link}
                          onClick={() => {
                            const catalogId = activeCatalog?.id || 'fallback';
                            handleCategoryClick(catalogId, link, subcategoryId);
                          }}
                          style={{ cursor: "pointer" }}
                        >
                          {link}
                        </div>
                      );
                    })}
                  </div>
                  <div className="w-layout-vflex flex-block-91-copy">
                    <img src="https://d3e54v103j8qbb.cloudfront.net/plugins/Basic/assets/placeholder.60f9b1840c.svg" loading="lazy" alt="" className="image-17" />
                    <img src="https://d3e54v103j8qbb.cloudfront.net/plugins/Basic/assets/placeholder.60f9b1840c.svg" loading="lazy" alt="" className="image-17" />
                  </div>
                </div>
              </div>
            </div>
            {/* –¢–∞–±—ã */}
            <div data-current="Tab 1" data-easing="ease" data-duration-in="300" data-duration-out="100" className="tabs w-tabs">
              <div className="tabs-menu w-tab-menu" style={{ maxHeight: "70vh", overflowY: "auto" }}>
                {tabData.map((tab, idx) => (
                  <a
                    key={tab.label}
                    data-w-tab={`Tab ${idx + 1}`}
                    className={`tab-link w-inline-block w-tab-link${activeTabIndex === idx ? " w--current" : ""}`}
                    onClick={() => {
                      setActiveTabIndex(idx);
                    }}
                    style={{ cursor: "pointer" }}
                  >
                    <div className="div-block-29">
                      <div className="code-embed-12 w-embed">
                        <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M10.3158 0.643914C10.4674 0.365938 10.8666 0.365938 11.0182 0.643914L14.0029 6.11673C14.0604 6.22222 14.1623 6.29626 14.2804 6.31838L20.4077 7.46581C20.7189 7.52409 20.8423 7.9037 20.6247 8.13378L16.3421 12.6636C16.2595 12.7509 16.2206 12.8707 16.2361 12.9899L17.0382 19.1718C17.079 19.4858 16.7561 19.7204 16.47 19.5847L10.8385 16.9114C10.73 16.8599 10.604 16.8599 10.4955 16.9114L4.86394 19.5847C4.5779 19.7204 4.25499 19.4858 4.29573 19.1718L5.0979 12.9899C5.11336 12.8707 5.07444 12.7509 4.99189 12.6636L0.709252 8.13378C0.491728 7.9037 0.615069 7.52409 0.926288 7.46581L7.05357 6.31838C7.17168 6.29626 7.27358 6.22222 7.33112 6.11673L10.3158 0.643914Z" fill="CurrentColor"></path>
                        </svg>
                      </div>
                    </div>
                    <div className="text-block-49">{tab.label}</div>
                  </a>
                ))}
              </div>
              <div className="tabs-content w-tab-content">
                {tabData.map((tab, idx) => (
                  <div
                    key={tab.label}
                    data-w-tab={`Tab ${idx + 1}`}
                    className={`tab-pane w-tab-pane${activeTabIndex === idx ? " w--tab-active" : ""}`}
                    style={{ display: activeTabIndex === idx ? "block" : "none" }}
                  >
                    <div className="w-layout-vflex flex-block-89">
                      <h3 className="heading-16">{tab.heading}</h3>
                      <div className="w-layout-hflex flex-block-92">
                        <div className="w-layout-vflex flex-block-91">
                          {tab.links.length === 1 ? (
                            <div
                              className="link-2"
                              onClick={() => {
                                const catalog = catalogsData?.partsIndexCategoriesWithGroups?.[idx];
                                let subcategoryId = `fallback_${idx}_0`;
                                if (catalog?.groups) {
                                  for (const group of catalog.groups) {
                                    if (group.subgroups && group.subgroups.length > 0) {
                                      const foundSubgroup = group.subgroups.find((subgroup: any) => subgroup.name === tab.links[0]);
                                      if (foundSubgroup) {
                                        subcategoryId = foundSubgroup.id;
                                        break;
                                      }
                                    } else if (group.name === tab.links[0]) {
                                      subcategoryId = group.id;
                                      break;
                                    }
                                  }
                                }
                                const catalogId = catalog?.id || 'fallback';
                                handleCategoryClick(catalogId, tab.links[0], subcategoryId);
                              }}
                              style={{ cursor: "pointer" }}
                            >
                              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
                            </div>
                          ) : (
                            tab.links.map((link: string, linkIndex: number) => {
                              const catalog = catalogsData?.partsIndexCategoriesWithGroups?.[idx];
                              let subcategoryId = `fallback_${idx}_${linkIndex}`;
                              if (catalog?.groups) {
                                for (const group of catalog.groups) {
                                  if (group.subgroups && group.subgroups.length > 0) {
                                    const foundSubgroup = group.subgroups.find((subgroup: any) => subgroup.name === link);
                                    if (foundSubgroup) {
                                      subcategoryId = foundSubgroup.id;
                                      break;
                                    }
                                  } else if (group.name === link) {
                                    subcategoryId = group.id;
                                    break;
                                  }
                                }
                              }
                              return (
                                <div
                                  className="link-2"
                                  key={link}
                                  onClick={() => {
                                    const catalogId = catalog?.id || 'fallback';
                                    handleCategoryClick(catalogId, link, subcategoryId);
                                  }}
                                  style={{ cursor: "pointer" }}
                                >
                                  {link}
                                </div>
                              );
                            })
                          )}
                        </div>
                        <div className="w-layout-vflex flex-block-91-copy">
                          <img src="https://d3e54v103j8qbb.cloudfront.net/plugins/Basic/assets/placeholder.60f9b1840c.svg" loading="lazy" alt="" className="image-17" />
                          <img src="https://d3e54v103j8qbb.cloudfront.net/plugins/Basic/assets/placeholder.60f9b1840c.svg" loading="lazy" alt="" className="image-17" />
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </nav>
      </>
    );
  };

  export default BottomHead; 