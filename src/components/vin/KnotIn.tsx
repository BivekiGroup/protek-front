import React, { useRef, useState } from "react";
import { useQuery } from '@apollo/client';
import { useRouter } from 'next/router';
import { GET_LAXIMO_UNIT_INFO, GET_LAXIMO_UNIT_IMAGE_MAP } from '@/lib/graphql';
import BrandSelectionModal from '../BrandSelectionModal';

interface KnotInProps {
  catalogCode?: string;
  vehicleId?: string;
  ssd?: string;
  unitId?: string;
  unitName?: string;
  parts?: Array<{
    detailid?: string;
    codeonimage?: string | number;
    oem?: string;
    name?: string;
    price?: string | number;
    brand?: string;
    availability?: string;
    note?: string;
    attributes?: Array<{ key: string; name?: string; value: string }>;
  }>;
  onPartSelect?: (codeOnImage: string | number | null) => void; // –ö–æ–ª–ª–±–µ–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è KnotParts –æ –≤—ã–¥–µ–ª–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–∏
  onPartsHighlight?: (codeOnImage: string | number | null) => void; // –ö–æ–ª–ª–±–µ–∫ –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –ø—Ä–∏ hover
  selectedParts?: Set<string | number>; // –í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ (–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const getImageUrl = (baseUrl: string, size: string) => {
  if (!baseUrl) return '';
  return baseUrl
    .replace(/&amp;/g, '&')
    .replace(/&lt;/g, '<')
    .replace(/&gt;/g, '>')
    .replace(/&quot;/g, '"')
    .replace('%size%', size);
};

const KnotIn: React.FC<KnotInProps> = ({ 
  catalogCode, 
  vehicleId, 
  ssd, 
  unitId, 
  unitName, 
  parts,
  onPartSelect,
  onPartsHighlight,
  selectedParts = new Set()
}) => {
  const imgRef = useRef<HTMLImageElement>(null);
  const [imageScale, setImageScale] = useState({ x: 1, y: 1 });
  const selectedImageSize = 'source';
  const [isBrandModalOpen, setIsBrandModalOpen] = useState(false);
  const [selectedDetail, setSelectedDetail] = useState<{ oem: string; name: string } | null>(null);
  const [hoveredCodeOnImage, setHoveredCodeOnImage] = useState<string | number | null>(null);
  const router = useRouter();
  const [isImageModalOpen, setIsImageModalOpen] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ –æ–± —É–∑–ª–µ (–¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏)
  console.log('üîç KnotIn - GET_LAXIMO_UNIT_INFO –∑–∞–ø—Ä–æ—Å:', {
    catalogCode,
    vehicleId,
    unitId,
    ssd: ssd ? `${ssd.substring(0, 50)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    ssdLength: ssd?.length,
    skipCondition: !catalogCode || !vehicleId || !unitId || !ssd || ssd.trim() === ''
  });
  
  const { data: unitInfoData, loading: unitInfoLoading, error: unitInfoError } = useQuery(
    GET_LAXIMO_UNIT_INFO,
    {
      variables: { 
        catalogCode, 
        vehicleId, 
        unitId, 
        ssd 
      },
      skip: !catalogCode || !vehicleId || !unitId || !ssd || ssd.trim() === '',
      errorPolicy: 'all',
    }
  );
  
  // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
  console.log('üîç KnotIn - GET_LAXIMO_UNIT_IMAGE_MAP –∑–∞–ø—Ä–æ—Å:', {
    catalogCode,
    vehicleId,
    unitId,
    ssd: ssd ? `${ssd.substring(0, 50)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    ssdLength: ssd?.length,
    skipCondition: !catalogCode || !vehicleId || !unitId || !ssd || ssd.trim() === ''
  });
  
  const { data: imageMapData, loading: imageMapLoading, error: imageMapError } = useQuery(
    GET_LAXIMO_UNIT_IMAGE_MAP,
    {
      variables: { 
        catalogCode, 
        vehicleId, 
        unitId, 
        ssd 
      },
      skip: !catalogCode || !vehicleId || !unitId || !ssd || ssd.trim() === '',
      errorPolicy: 'all',
    }
  );

  // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
  if (!catalogCode || !vehicleId || !unitId || !ssd || ssd.trim() === '') {
    console.log('‚ö†Ô∏è KnotIn: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', {
      catalogCode: !!catalogCode,
      vehicleId: !!vehicleId,
      unitId: !!unitId,
      ssd: !!ssd,
      ssdValid: ssd ? ssd.trim() !== '' : false
    });
    
    return (
      <div className="text-center py-8 text-gray-500">
        <div className="text-lg font-medium mb-2">–°—Ö–µ–º–∞ —É–∑–ª–∞</div>
        <div className="text-sm">–í—ã–±–µ—Ä–∏—Ç–µ —É–∑–µ–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ö–µ–º—ã</div>
        {process.env.NODE_ENV === 'development' && (
          <div className="text-xs text-red-500 mt-2">
            Debug: catalogCode={catalogCode}, vehicleId={vehicleId}, unitId={unitId}, ssd={ssd ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}
          </div>
        )}
      </div>
    );
  }

  const unitInfo = unitInfoData?.laximoUnitInfo;
  const coordinates = imageMapData?.laximoUnitImageMap?.coordinates || [];
  const imageUrl = unitInfo?.imageurl ? getImageUrl(unitInfo.imageurl, selectedImageSize) : '';

  // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
  React.useEffect(() => {
    if (unitInfo) {
      console.log('‚úÖ KnotIn: –¥–∞–Ω–Ω—ã–µ —É–∑–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
        unitName: unitInfo.name,
        hasImage: !!unitInfo.imageurl,
        imageUrl: unitInfo.imageurl,
        processedImageUrl: imageUrl
      });
    }
  }, [unitInfo, imageUrl]);

  React.useEffect(() => {
    if (coordinates.length > 0) {
      console.log('‚úÖ KnotIn: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞—Ä—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
        coordinatesCount: coordinates.length,
        firstCoordinate: coordinates[0]
      });
    } else if (imageMapData) {
      console.log('‚ö†Ô∏è KnotIn: –∫–∞—Ä—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—É—Å—Ç—ã–µ:', imageMapData);
    }
  }, [coordinates, imageMapData]);

  // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Ç–æ—á–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
  const handleImageLoad = (e: React.SyntheticEvent<HTMLImageElement>) => {
    const img = e.currentTarget;
    if (!img.naturalWidth || !img.naturalHeight) return;
    setImageScale({
      x: img.offsetWidth / img.naturalWidth,
      y: img.offsetHeight / img.naturalHeight,
    });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ (zoom)
  const handleImageClick = (e: React.MouseEvent<HTMLImageElement>) => {
    // –ï—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –ø–æ —Ç–æ—á–∫–µ, –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É (—Ç–æ—á–∫–∏ –≤—ã—à–µ –ø–æ z-index)
    setIsImageModalOpen(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —Ç–æ—á–∫—É
  const handlePointHover = (coord: any) => {
    // –ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Å–≤—è–∑–∏
    const identifierToUse = coord.detailid || coord.codeonimage || coord.code;
    
    console.log('üîç KnotIn - hover –Ω–∞ —Ç–æ—á–∫—É:', {
      coord,
      detailid: coord.detailid,
      codeonimage: coord.codeonimage,
      code: coord.code,
      identifierToUse,
      type: typeof identifierToUse,
      coordinatesLength: coordinates.length,
      partsLength: parts?.length || 0,
      firstCoord: coordinates[0],
      firstPart: parts?.[0]
    });
    
    setHoveredCodeOnImage(identifierToUse);
    if (onPartsHighlight) {
      onPartsHighlight(identifierToUse);
    }
  };

  // –ö–ª–∏–∫ –ø–æ —Ç–æ—á–∫–µ: –≤—ã–¥–µ–ª–∏—Ç—å –≤ —Å–ø–∏—Å–∫–µ –¥–µ—Ç–∞–ª–µ–π
  const handlePointClick = (coord: any) => {
    if (!parts) return;
    
    const identifierToUse = coord.detailid || coord.codeonimage || coord.code;
    console.log('–ö–ª–∏–∫ –ø–æ —Ç–æ—á–∫–µ:', identifierToUse, '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞:', coord, '–í—Å–µ –¥–µ—Ç–∞–ª–∏:', parts);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ –≤—ã–±–æ—Ä–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ
    if (onPartSelect) {
      onPartSelect(identifierToUse);
    }
  };

  // –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ —Ç–æ—á–∫–µ: –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ –±—Ä–µ–Ω–¥–∞
  const handlePointDoubleClick = (coord: any) => {
    if (!parts) return;
    
    const identifierToUse = coord.detailid || coord.codeonimage || coord.code;
    console.log('–î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ —Ç–æ—á–∫–µ:', identifierToUse, '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞:', coord);
    
    const part = parts.find(
      (p) =>
        (p.detailid && p.detailid.toString() === identifierToUse?.toString()) ||
        (p.codeonimage && p.codeonimage.toString() === identifierToUse?.toString())
    );
    
    if (part?.oem) {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ –±—Ä–µ–Ω–¥–∞ –≤–º–µ—Å—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      const url = `/vehicle-search/${catalogCode}/${vehicleId}/part/${part.oem}/brands?detailName=${encodeURIComponent(part.name || '')}`;
      router.push(url);
    } else {
      console.warn('–ù–µ—Ç –∞—Ä—Ç–∏–∫—É–ª–∞ (oem) –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–æ—á–∫–∏:', identifierToUse, part);
    }
  };

  // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏: –≤—ã–≤–µ—Å—Ç–∏ –¥–µ—Ç–∞–ª–∏ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  React.useEffect(() => {
    console.log('KnotIn parts:', parts);
    console.log('KnotIn coordinates:', coordinates);
    if (coordinates.length > 0) {
      console.log('üîç –ü–µ—Ä–≤—ã–µ 5 –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:', coordinates.slice(0, 5).map((c: any) => ({
        code: c.code,
        codeonimage: c.codeonimage, 
        detailid: c.detailid,
        x: c.x, 
        y: c.y
      })));
    }
    if (parts && parts.length > 0) {
      console.log('üîç –ü–µ—Ä–≤—ã–µ 5 –¥–µ—Ç–∞–ª–µ–π:', parts.slice(0, 5).map(p => ({
        name: p.name,
        codeonimage: p.codeonimage,
        detailid: p.detailid,
        oem: p.oem
      })));
    }
    
    // –ü–æ–ø—ã—Ç–∫–∞ —Å–≤—è–∑–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å –¥–µ—Ç–∞–ª—è–º–∏
    if (coordinates.length > 0 && parts && parts.length > 0) {
      console.log('üîó –ü–æ–ø—ã—Ç–∫–∞ —Å–≤—è–∑–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å –¥–µ—Ç–∞–ª—è–º–∏:');
      coordinates.forEach((coord: any, idx: number) => {
        const matchingPart = parts.find(part => 
          part.detailid === coord.detailid || 
          part.codeonimage === coord.codeonimage ||
          part.codeonimage === coord.code
        );
        if (matchingPart) {
          console.log(`  ‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ ${idx}: detailid=${coord.detailid}, codeonimage=${coord.codeonimage} -> –î–µ—Ç–∞–ª—å: ${matchingPart.name}`);
        } else {
          console.log(`  ‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ ${idx}: detailid=${coord.detailid}, codeonimage=${coord.codeonimage} -> –ù–ï –ù–ê–ô–î–ï–ù–ê`);
        }
      });
    }
  }, [parts, coordinates]);

  if (unitInfoLoading || imageMapLoading) {
    console.log('üîÑ KnotIn: –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...', {
      unitInfoLoading,
      imageMapLoading,
      unitInfoError: unitInfoError?.message,
      imageMapError: imageMapError?.message
    });
    return <div className="text-center py-8 text-gray-500">–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ö–µ–º—É —É–∑–ª–∞...</div>;
  }
  
  if (unitInfoError) {
    console.error('‚ùå KnotIn: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–∑–ª–µ:', unitInfoError);
    return (
      <div className="text-center py-8 text-red-600">
        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ö–µ–º—ã: {unitInfoError.message}
        {process.env.NODE_ENV === 'development' && (
          <div className="text-xs mt-2 text-gray-500">
            GraphQL Error: {JSON.stringify(unitInfoError, null, 2)}
          </div>
        )}
      </div>
    );
  }
  
  if (imageMapError) {
    console.error('‚ùå KnotIn: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', imageMapError);
  }
  
  if (!imageUrl) {
    console.log('‚ö†Ô∏è KnotIn: –Ω–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
      unitInfo: !!unitInfo,
      imageurl: unitInfo?.imageurl,
      unitInfoData: !!unitInfoData
    });
    return (
      <div className="text-center py-8 text-gray-400">
        –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —É–∑–ª–∞
        {process.env.NODE_ENV === 'development' && unitInfo && (
          <div className="text-xs mt-2 text-gray-500">
            Debug: unitInfo.imageurl = {unitInfo.imageurl || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
          </div>
        )}
      </div>
    );
  }

  return (
    <>
      <div className="relative inline-block">
        <img
          ref={imgRef}
          src={imageUrl}
          loading="lazy"
          alt={unitName || unitInfo?.name || "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∑–ª–∞"}
          onLoad={handleImageLoad}
          className="max-w-full h-auto mx-auto rounded cursor-zoom-in"
          style={{ maxWidth: 400, display: 'block' }}
          onClick={handleImageClick}
        />
        {/* –¢–æ—á–∫–∏/–æ–±–ª–∞—Å—Ç–∏ */}
        {coordinates.map((coord: any, idx: number) => {
          // –ö—Ä—É–∂–∫–∏ –≤—Å–µ–≥–¥–∞ 32x32px, —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ
          const size = 22;
          const scaledX = coord.x * imageScale.x - size / 2;
          const scaledY = coord.y * imageScale.y - size / 2;
          
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º code –∏–ª–∏ codeonimage –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
          const codeValue = coord.code || coord.codeonimage;
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ—á–∫–∏
          const isSelected = selectedParts.has(codeValue);
          const isHovered = hoveredCodeOnImage === codeValue;
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
          let backgroundColor = '#B7CAE2'; // –ë–∞–∑–æ–≤—ã–π —Ü–≤–µ—Ç
          let textColor = '#000';
          
          if (isSelected) {
            backgroundColor = '#22C55E'; // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
            textColor = '#fff';
          } else if (isHovered) {
            backgroundColor = '#EC1C24'; // –ö—Ä–∞—Å–Ω—ã–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            textColor = '#fff';
          }
          
          return (
            <div
              key={`coord-${unitId}-${idx}-${coord.x}-${coord.y}`}
              tabIndex={0}
              aria-label={`–î–µ—Ç–∞–ª—å ${codeValue}`}
              onKeyDown={e => {
                if (e.key === 'Enter' || e.key === ' ') handlePointClick(coord);
              }}
              className="absolute flex items-center justify-center cursor-pointer transition-all duration-200 ease-in-out"
              style={{
                left: scaledX,
                top: scaledY,
                width: size,
                height: size,
                backgroundColor,
                borderRadius: '50%',
                border: isSelected ? '2px solid #16A34A' : 'none',
                transform: isHovered || isSelected ? 'scale(1.1)' : 'scale(1)',
                zIndex: isHovered || isSelected ? 10 : 1,
                pointerEvents: 'auto',
              }}
              title={`${codeValue} (–ö–ª–∏–∫ - –≤—ã–¥–µ–ª–∏—Ç—å –≤ —Å–ø–∏—Å–∫–µ, –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ - –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –±—Ä–µ–Ω–¥–∞)`}
              onClick={e => { e.stopPropagation(); handlePointClick(coord); }}
              onDoubleClick={e => { e.stopPropagation(); handlePointDoubleClick(coord); }}
              onMouseEnter={() => handlePointHover(coord)}
              onMouseLeave={() => {
                setHoveredCodeOnImage(null);
                if (onPartsHighlight) {
                  onPartsHighlight(null);
                }
              }}
            >
              <span 
                className="flex items-center justify-center w-full h-full text-sm font-bold select-none pointer-events-none transition-colors duration-200" 
                style={{ color: textColor }}
              >
                {codeValue}
              </span>
            </div>
          );
        })}
      </div>
      {/* –ú–æ–¥–∞–ª–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      {isImageModalOpen && (
        <div
          className="fixed inset-0 z-[9999] flex items-center justify-center bg-black/20 bg-opacity-70"
          onClick={() => setIsImageModalOpen(false)}
          style={{ cursor: 'zoom-out' }}
        >
          <div className="relative">
            <img
              src={imageUrl}
              alt={unitName || unitInfo?.name || "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∑–ª–∞"}
              className="max-h-[90vh] max-w-[90vw] rounded shadow-lg"
              onClick={e => e.stopPropagation()}
              style={{ background: '#fff' }}
            />
            {/* –£–±–∏—Ä–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ—á–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ */}
          </div>
          <button
            onClick={() => setIsImageModalOpen(false)}
            className="absolute top-4 right-4 text-white text-3xl font-bold bg-black bg-opacity-40 rounded-full w-10 h-10 flex items-center justify-center hover:bg-black hover:bg-opacity-60 transition-colors"
            aria-label="–ó–∞–∫—Ä—ã—Ç—å"
            style={{ zIndex: 10000 }}
          >
            √ó
          </button>
        </div>
      )}
      {/* –ú–æ–¥–∞–ª–∫–∞ –≤—ã–±–æ—Ä–∞ –±—Ä–µ–Ω–¥–∞ */}
      <BrandSelectionModal
        isOpen={isBrandModalOpen}
        onClose={() => setIsBrandModalOpen(false)}
        articleNumber={selectedDetail?.oem || ''}
        detailName={selectedDetail?.name || ''}
      />
    </>
  );
};

export default KnotIn; 