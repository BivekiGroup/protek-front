import React, { useState, useEffect, useCallback } from 'react';
import { useRouter } from 'next/router';
import { useLazyQuery } from '@apollo/client';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { FIND_LAXIMO_VEHICLE, FIND_LAXIMO_VEHICLE_BY_PLATE_GLOBAL } from '@/lib/graphql';
import { LaximoVehicleSearchResult } from '@/types/laximo';
import Link from 'next/link';

interface VehicleSearchResultsPageProps {}

const VehicleSearchResultsPage: React.FC<VehicleSearchResultsPageProps> = () => {
  const router = useRouter();
  const { query: routerQuery } = router;
  const [vehicles, setVehicles] = useState<LaximoVehicleSearchResult[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [searchType, setSearchType] = useState<'vin' | 'plate' | ''>('');
  const [isRedirecting, setIsRedirecting] = useState(false);

  // Query –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ VIN
  const [findVehicleByVin] = useLazyQuery(FIND_LAXIMO_VEHICLE, {
    onCompleted: (data) => {
      const results = data.laximoFindVehicle || [];
      setVehicles(results);
      setIsLoading(false);
    },
    onError: (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ VIN:', error);
      setVehicles([]);
      setIsLoading(false);
    }
  });

  // Query –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≥–æ—Å–Ω–æ–º–µ—Ä—É
  const [findVehicleByPlate] = useLazyQuery(FIND_LAXIMO_VEHICLE_BY_PLATE_GLOBAL, {
    onCompleted: (data) => {
      const results = data.laximoFindVehicleByPlateGlobal || [];
      setVehicles(results);
      setIsLoading(false);
    },
    onError: (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –≥–æ—Å–Ω–æ–º–µ—Ä—É:', error);
      setVehicles([]);
      setIsLoading(false);
    }
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø–æ–∏—Å–∫–∞
  const isVinNumber = (query: string): boolean => {
    const cleanQuery = query.trim().toUpperCase();
    return /^[A-HJ-NPR-Z0-9]{17}$/.test(cleanQuery);
  };

  const isPlateNumber = (query: string): boolean => {
    const cleanQuery = query.trim().toUpperCase().replace(/\s+/g, '');
    const platePatterns = [
      /^[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]\d{3}[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{2,3}$/,
      /^[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{3}[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]\d{2,3}$/,
      /^[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]\d{3}[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{2,3}$/,
    ];
    return platePatterns.some(pattern => pattern.test(cleanQuery));
  };

  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    if (routerQuery.q && typeof routerQuery.q === 'string') {
      const query = routerQuery.q.trim();
      setSearchQuery(query);
      setIsLoading(true);

      if (isVinNumber(query)) {
        setSearchType('vin');
        findVehicleByVin({
          variables: {
            catalogCode: '', // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫
            vin: query.toUpperCase()
          }
        });
      } else if (isPlateNumber(query)) {
        setSearchType('plate');
        findVehicleByPlate({
          variables: {
            plateNumber: query.toUpperCase().replace(/\s+/g, '')
          }
        });
      } else {
        setIsLoading(false);
      }
    }
  }, [routerQuery.q, findVehicleByVin, findVehicleByPlate]);

  const handleVehicleSelect = useCallback((vehicle: LaximoVehicleSearchResult, skipToCategories = false) => {
    console.log('üöó handleVehicleSelect –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è:', vehicle, 'skipToCategories:', skipToCategories);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –≥—Ä—É–ø–ø –∑–∞–ø—á–∞—Å—Ç–µ–π –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
    const catalogCode = vehicle.catalog || vehicle.brand?.toLowerCase() || '';
    const vehicleId = vehicle.vehicleid || '';
    const ssd = vehicle.ssd || '';
    
    console.log('üîß –í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', {
      catalogCode,
      vehicleId, 
      ssd: ssd ? `${ssd.substring(0, 50)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
      ssdLength: ssd.length
    });
    
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
    const urlParams = new URLSearchParams();
    
    // –î–æ–±–∞–≤–ª—è–µ–º VIN-–Ω–æ–º–µ—Ä –≤ URL, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (searchQuery && searchType === 'vin') {
      urlParams.set('vin', searchQuery);
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å SSD, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ localStorage –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏
    if (ssd && ssd.trim() !== '') {
      const vehicleKey = `vehicle_ssd_${catalogCode}_${vehicleId}`;
      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º SSD –≤ localStorage, –∫–ª—é—á:', vehicleKey);
      
      // –û—á–∏—â–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ SSD –¥–ª—è –¥—Ä—É–≥–∏—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
      const keysToRemove = Object.keys(localStorage).filter(key => key.startsWith('vehicle_ssd_'));
      keysToRemove.forEach(key => {
        if (key !== vehicleKey) {
          console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π SSD –∫–ª—é—á:', key);
          localStorage.removeItem(key);
        }
      });
      
      localStorage.setItem(vehicleKey, ssd);
      
      urlParams.set('use_storage', '1');
      urlParams.set('ssd_length', ssd.length.toString());
    }
    
    if (skipToCategories) {
      urlParams.set('searchType', 'categories');
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const baseUrl = `/vehicle-search/${catalogCode}/${vehicleId}`;
    const url = urlParams.toString() ? `${baseUrl}?${urlParams.toString()}` : baseUrl;
    
    console.log('üîó –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ URL:', url);
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º replace –≤–º–µ—Å—Ç–æ push –¥–ª—è –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
    router.replace(url);
  }, [router, searchQuery, searchType]);

  // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ VIN, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–≤—Ç–æ–º–æ–±–∏–ª—å
  useEffect(() => {
    if (!isLoading && searchType === 'vin' && vehicles.length === 1 && !isRedirecting) {
      console.log('üöó –ù–∞–π–¥–µ–Ω –æ–¥–∏–Ω –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ VIN, –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥');
      
      const vehicle = vehicles[0];
      const catalogCode = vehicle.catalog || vehicle.brand?.toLowerCase() || '';
      const vehicleId = vehicle.vehicleid || '';
      
      // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Ü–µ–ª–µ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ (—Å—Ä–∞–∑—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏)
      const targetUrl = `/vehicle-search/${catalogCode}/${vehicleId}?searchType=categories`;
      router.prefetch(targetUrl);
      console.log('üîÑ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:', targetUrl);
      
      setIsRedirecting(true);
      
      // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ —Å—Ä–∞–∑—É –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
      handleVehicleSelect(vehicle, true);
    }
  }, [isLoading, searchType, vehicles, handleVehicleSelect, isRedirecting, router]);

  const handleCancelRedirect = () => {
    setIsRedirecting(false);
  };

  return (
    <>

      
      <main className="bg-[#F5F8FB] min-h-screen">
        {/* Breadcrumb (InfoSearch style) */}
        <section className="section-info">
          <div className="w-layout-blockcontainer container info w-container">
            <div className="w-layout-vflex flex-block-9">
              <div className="w-layout-hflex flex-block-7">
                <a href="/" className="link-block w-inline-block">
                  <div>–ì–ª–∞–≤–Ω–∞—è</div>
                </a>
                <div className="text-block-3">‚Üí</div>
                <a href="#" className="link-block-2 w-inline-block">
                  <div>–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏</div>
                </a>
              </div>
              <div className="w-layout-hflex flex-block-8">
                <div className="w-layout-hflex flex-block-10">
                  <h1 className="heading">{searchType === 'vin' ? '–ü–æ–∏—Å–∫ –ø–æ VIN –Ω–æ–º–µ—Ä—É' : '–ü–æ–∏—Å–∫ –ø–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É'}</h1>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Search Results Header */}
        <div className="flex flex-col items-center pt-10 pb-16 max-md:px-5">
          <div className="w-full max-w-[1580px]">
            {/* <div className="mb-6">
              <p className="text-lg text-gray-600">
                –ó–∞–ø—Ä–æ—Å: <span className="font-mono font-bold">{searchQuery}</span>
              </p>
              {!isLoading && vehicles.length > 0 && !isRedirecting && (
                <p className="text-sm text-gray-500 mt-2">
                  –ù–∞–π–¥–µ–Ω–æ {vehicles.length} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
                </p>
              )}
            </div> */}

            {/* Loading State */}
            {isLoading && (
              <div className="bg-white rounded-2xl shadow p-10 flex flex-col items-center justify-center min-h-[300px]">
                <div className="animate-spin rounded-full h-24 w-24 border-b-2 border-red-600 mb-6"></div>
                <p className="text-lg text-gray-600">–ü–æ–∏—Å–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π...</p>
              </div>
            )}

            {/* Auto-redirect notification for VIN search with single result */}
            {!isLoading && searchType === 'vin' && vehicles.length === 1 && isRedirecting && (
              <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-6">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <svg className="animate-spin h-6 w-6 text-green-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                      <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <div>
                      <h3 className="text-lg font-medium text-green-900">‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞–π–¥–µ–Ω!</h3>
                      <p className="text-green-700">
                        <strong>{vehicles[0]?.brand} {vehicles[0]?.name}</strong> 
                        {vehicles[0]?.year && ` (${vehicles[0].year} –≥.)`}
                        {vehicles[0]?.engine && `, –¥–≤–∏–≥–∞—Ç–µ–ª—å: ${vehicles[0].engine}`}
                      </p>
                      <p className="text-sm text-green-600 mt-1">
                        üöÄ –ü–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∑–∞–ø—á–∞—Å—Ç–µ–π...
                      </p>
                    </div>
                  </div>
                  <button
                    onClick={() => router.back()}
                    className="text-green-600 hover:text-green-800 border border-green-300 hover:border-green-400 px-3 py-1 rounded text-sm font-medium transition-colors"
                  >
                    –ù–∞–∑–∞–¥
                  </button>
                </div>
              </div>
            )}

            {/* Results List (Search-like style, not table) */}
            {!isLoading && vehicles.length > 0 && !isRedirecting && (
              <div className="bg-white rounded-2xl shadow p-10">
                <div className="flex flex-wrap items-center gap-6 font-bold text-gray-900 text-base mb-2 px-2">
                  <div className="min-w-[100px] flex-1 break-words">–ë—Ä–µ–Ω–¥</div>
                  <div className="min-w-[120px] flex-1 break-words">–ù–∞–∑–≤–∞–Ω–∏–µ</div>
                  <div className="min-w-[120px] flex-1 break-words">–ú–æ–¥–µ–ª—å</div>
                  <div className="min-w-[60px] flex-1 break-words">–ì–æ–¥</div>
                  <div className="min-w-[120px] flex-1 break-words">–î–≤–∏–≥–∞—Ç–µ–ª—å</div>
                  <div className="min-w-[80px] flex-1 break-words">–ö–ü–ü</div>
                  <div className="min-w-[80px] flex-1 break-words">–†—ã–Ω–æ–∫</div>
                  <div className="min-w-[100px] flex-1 break-words">–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞</div>
                  <div className="min-w-[140px] flex-1 break-words">–ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞</div>
                </div>
                <div className="space-y-0">
                  {vehicles.map((vehicle, index) => (
                    <div
                      key={vehicle.vehicleid || index}
                      className="flex flex-wrap items-center gap-6 bg-white border-b border-gray-200 px-6 py-3 cursor-pointer hover:bg-slate-100 transition-colors max-w-full"
                      onClick={() => handleVehicleSelect(vehicle)}
                      style={{ minWidth: 0 }}
                    >
                      <div className="font-bold text-gray-900 text-base min-w-[100px] flex-1 break-words">{vehicle.brand}</div>
                      <div className="text-gray-900 text-base min-w-[120px] flex-1 break-words">{vehicle.name}</div>
                      <div className="text-gray-900 text-base min-w-[120px] flex-1 break-words">{vehicle.model}</div>
                      <div className="text-gray-900 text-base min-w-[60px] flex-1 break-words">{vehicle.year || '-'}</div>
                      <div className="text-gray-900 text-base min-w-[120px] flex-1 break-words">{vehicle.engine || '-'}</div>
                      <div className="text-gray-900 text-base min-w-[80px] flex-1 break-words">{vehicle.transmission || '-'}</div>
                      <div className="text-gray-900 text-base min-w-[80px] flex-1 break-words">{vehicle.market || '-'}</div>
                      <div className="text-gray-900 text-base min-w-[100px] flex-1 break-words">{vehicle.date || vehicle.manufactured || '-'}</div>
                      <div className="text-gray-900 text-base min-w-[140px] flex-1 break-words">{vehicle.prodRange || vehicle.prodPeriod || ((vehicle.datefrom && vehicle.dateto) ? `${vehicle.datefrom} - ${vehicle.dateto}` : (vehicle.modelyearfrom && vehicle.modelyearto) ? `${vehicle.modelyearfrom} - ${vehicle.modelyearto}` : '-')}</div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* No Results */}
            {!isLoading && vehicles.length === 0 && searchQuery && (
              <div className="bg-[#eaf0fa] border border-[#b3c6e6] rounded-2xl shadow p-10 text-center">
                <svg className="w-16 h-16 mx-auto mb-4" style={{ color: '#0d336c' }} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.29-1.009-5.824-2.562M15 9.75a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                <h3 className="text-xl font-semibold mb-2" style={{ color: '#0d336c' }}>
                  –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                </h3>
                <p className="mb-4" style={{ color: '#0d336c' }}>
                  –ü–æ –∑–∞–ø—Ä–æ—Å—É <span className="font-mono font-semibold">{searchQuery}</span> –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.
                </p>
                <p className="text-sm" style={{ color: '#3b5a99' }}>
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.
                </p>
              </div>
            )}

            {/* Invalid Search Query */}
            {!isLoading && !searchQuery && (
              <div className="text-center py-12">
                <div className="text-gray-400 mb-4">
                  <svg className="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
                <h3 className="text-xl font-medium text-gray-900 mb-2">
                  –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                </h3>
                <p className="text-gray-600 mb-6">
                  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –≤ —à–∞–ø–∫–µ —Å–∞–π—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –ø–æ VIN –Ω–æ–º–µ—Ä—É –∏–ª–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
                </p>
                <Link 
                  href="/"
                  className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                >
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                </Link>
              </div>
            )}
          </div>
        </div>
      </main>

      <Footer />
    </>
  );
};

export default VehicleSearchResultsPage; 